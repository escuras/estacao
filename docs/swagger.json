{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Metereologia API",
        "description": "Uma API simples em heroku"
    },
    "paths": {
        "/api/user": {
            "post": {
                "summary": "Add user.",
                "description": "Add user to database and create account.",
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "The user to create.",
                        "schema": {
                            "required": [
                                "name",
                                "password"
                            ],
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User is created"
                    },
                    "400": {
                        "description": "The name of the user is needed."
                    },
                    "401": {
                        "description": "The password of the user is needed."
                    },
                    "402": {
                        "description": "Exists a user with same name."
                    },
                    "403": {
                        "description": "Exists a user with same email."
                    }
                }
            }
        },
        "/api/users/get": {
            "get": {
                "summary": "Return the list of users.",
                "description": "Return the list of users in database. Is sorted in alphabetic order.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of users in database."
                    }
                }
            }
        },
        "/api/user/get": {
            "post": {
                "summary": "Return the user.",
                "description": "Return the information of the user.",
                "consumes": "application/x-www-form-urlencoded",
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "required": false,
                        "description": "The name of the user."
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "required": true,
                        "description": "The password of the user."
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "required": false,
                        "description": "The email of the user."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User in database."
                    },
                    "401": {
                        "description": "You need the password of the user."
                    },
                    "402": {
                        "description": "No user found."
                    }
                }
            }
        },
        "/api/user/put": {
            "put": {
                "summary": "Update the user.",
                "description": "Update the information of the user.",
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "The user to update.",
                        "schema": {
                            "required": [
                                "id",
                                "name",
                                "password"
                            ],
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Id of the user."
                    },
                    "401": {
                        "description": "You need the password to update the user."
                    },
                    "402": {
                        "description": "You need the ID of the user."
                    },
                    "403": {
                        "description": "You need the name to update the user."
                    },
                    "404": {
                        "description": "Exists a user with same name."
                    },
                    "405": {
                        "description": "You need the email to update the user."
                    },
                    "406": {
                        "description": "Exists a user with same email."
                    }
                }
            }
        },
        "/api/user/delete": {
            "delete": {
                "summary": "Delete the user.",
                "description": "Delete the user, confiduration and stats.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Id of the user."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation succeded."
                    }
                }
            }
        },
        "/api/temperature": {
            "post": {
                "summary": "Add temperature.",
                "description": "Add Temperature to database.",
                "parameters": [
                    {
                        "name": "account",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Id of the user."
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Value pf the temperature."
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The value was inserted."
                    },
                    "401": {
                        "description": "The value of temperature is needed."
                    },
                    "402": {
                        "description": "The account is needed."
                    },
                    "403": {
                        "description": "The account don't exist."
                    }
                }
            }
        },
        "/api/temperature/delete": {
            "delete": {
                "summary": "Remove temperature values.",
                "description": "Remove temperature in an interval.",
                "parameters": [
                    {
                        "name": "account",
                        "in": "query",
                        "required": true,
                        "description": "Id of the user."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "type": "date",
                        "required": false,
                        "description": "Date of the beggining of data lecture."
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "type": "date",
                        "required": false,
                        "description": "Date of the end of data lecture."
                    }
                ],
                "responses": {
                    "201": {
                        "description": "All records deleted."
                    },
                    "202": {
                        "description": "Period deleted between..."
                    },
                    "401": {
                        "description": "The account is needed."
                    },
                    "402": {
                        "description": "The account don't exist."
                    },
                    "403": {
                        "description": "Start moment is needed if end moment defined."
                    }
                }
            }
        },
        "/api/temperature/get": {
            "get": {
                "summary": "Get temperature values.",
                "description": "Get temperature in an interval.",
                "parameters": [
                    {
                        "name": "account",
                        "in": "query",
                        "required": true,
                        "description": "Id of the user."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "type": "date",
                        "required": false,
                        "description": "Date of the beggining of data lecture."
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "type": "date",
                        "required": false,
                        "description": "Date of the end of data lecture."
                    }
                ],
                "responses": {
                    "201": {
                        "description": "All records."
                    },
                    "202": {
                        "description": "Records between..."
                    },
                    "401": {
                        "description": "The account is needed."
                    },
                    "402": {
                        "description": "The account don't exist."
                    },
                    "403": {
                        "description": "Start moment is needed if end moment defined."
                    }
                }
            }
        },
        "/api/configuration": {
            "put": {
                "summary": "Update interval of lecture.",
                "description": "Update period for lecture of sensors.",
                "parameters": [
                    {
                        "name": "account",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Id of the user."
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "type": "number",
                        "required": true,
                        "description": "Value of the period for lecture of the sensors."
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The period was updated."
                    },
                    "401": {
                        "description": "The period of lecture is needed."
                    },
                    "402": {
                        "description": "The account is needed."
                    },
                    "403": {
                        "description": "The account don't exist."
                    }
                }
            }
        },
        "/api/configuration/period": {
            "get": {
                "summary": "Get interval of lecture.",
                "description": "Get period for lecture of sensors.",
                "parameters": [
                    {
                        "name": "account",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Id of the user."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Period send."
                    },
                    "401": {
                        "description": "The account is needed."
                    },
                    "402": {
                        "description": "The account don't exist."
                    }
                }
            }
        },
        "/api/configuration/default_period": {
            "get": {
                "summary": "Get default interval of lecture.",
                "description": "Get default period for lecture of sensors.",
                "parameters": [
                    {
                        "name": "account",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Id of the user."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default period send."
                    },
                    "401": {
                        "description": "The account is needed."
                    },
                    "402": {
                        "description": "The account don't exist."
                    }
                }
            }
        }
    }
}