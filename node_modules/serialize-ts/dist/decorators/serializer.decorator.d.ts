import { Type } from "../type";
import { Serializer as ISerializer } from "../serializers";
/**
 * Defines a serializer for any serialization or deserialization of your field
 */
export declare function Serializer(): PropertyDecorator;
/**
 * Defines a serializer by passed parameter @param modelType
 * Try to find a serializer for your model type in @type {SerializersFactory}
 *
 * @throws {NoSerializerError} if serializer was missing
 * @param modelType Constructor of model wich registered as {@Model}
 */
export declare function Serializer<T extends Object>(modelType: Type<T>): PropertyDecorator;
/**
 * Defines your custom serializer for this field
 * It will be used for serialization and deserialization
 *
 * @param {ISerializer} serializer Custom serializer for this field only!
 */
export declare function Serializer<T extends Object>(serializer: ISerializer<T>): PropertyDecorator;
