"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var errors_1 = require("../errors");
var json_utils_1 = require("./json-utils");
var get_metadata_1 = require("../metadata/get-metadata");
/**
 * Convert json for type that you need with updated names
 *
 * @param {Object} json
 * @param {Constructor<T extends Object>} modelType
 * @returns {T}
 */
function deserialize(json, modelType) {
    var model = new modelType();
    var modelPrototype = Object.getPrototypeOf(model);
    var fields = get_metadata_1.getMetadata(modelPrototype);
    if (fields.length === 0) {
        throw new errors_1.NoFieldsError();
    }
    // Simple serialization
    fields.forEach(getDeserialization(model, json));
    return model;
}
exports.deserialize = deserialize;
function setFieldMetadataToModel(model, fieldMetadata, json) {
    var address = json_utils_1.parseJsonPropertyName(fieldMetadata.jsonPropertyName);
    var jsonValue = json_utils_1.getPropertyOfJson(json, address);
    if (jsonValue !== null) {
        model[fieldMetadata.modelPropertyName] = fieldMetadata.serializer.deserialize(jsonValue);
    }
}
function getDeserialization(model, json) {
    return function (fieldMetadata) { return setFieldMetadataToModel(model, fieldMetadata, json); };
}
