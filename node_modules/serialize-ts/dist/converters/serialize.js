"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var errors_1 = require("../errors");
var json_utils_1 = require("./json-utils");
require("reflect-metadata");
var field_utils_1 = require("../serializers/field.utils");
var get_metadata_1 = require("../metadata/get-metadata");
/**
 * Convert model to json with metadata names
 *
 * Fields that not are labeled as {@link Field} will be ignore
 *
 * @param {Object} model Serializable model that was convert to json
 * @returns {Object} Server object
 */
function serialize(model) {
    var modelPrototype = Object.getPrototypeOf(model);
    var fields = get_metadata_1.getMetadata(modelPrototype);
    if (fields.length === 0) {
        throw new errors_1.NoFieldsError();
    }
    // Convert array of field metadata to json object
    return fields.reduce(function (previousValue, currentValue) {
        var address = json_utils_1.parseJsonPropertyName((currentValue.jsonPropertyName));
        var modelValue = model[currentValue.modelPropertyName];
        if (field_utils_1.isPresent(modelValue)) {
            var serializedModelValue = currentValue.serializer.serialize(modelValue);
            json_utils_1.setPropertyToJson(previousValue, address, serializedModelValue);
        }
        return previousValue;
    }, {});
}
exports.serialize = serialize;
